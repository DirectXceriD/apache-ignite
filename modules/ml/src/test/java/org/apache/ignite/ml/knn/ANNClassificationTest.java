/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.ignite.ml.knn;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ThreadLocalRandom;
import org.apache.ignite.ml.TestUtils;
import org.apache.ignite.ml.knn.ann.ANNClassificationModel;
import org.apache.ignite.ml.knn.ann.ANNClassificationTrainer;
import org.apache.ignite.ml.knn.classification.NNStrategy;
import org.apache.ignite.ml.math.distances.EuclideanDistance;
import org.apache.ignite.ml.math.primitives.vector.VectorUtils;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

/** Tests behaviour of ANNClassificationTest. */
@RunWith(Parameterized.class)
public class ANNClassificationTest {
    /** Number of parts to be tested. */
    private static final int[] partsToBeTested = new int[]{1, 2, 3, 4, 5, 7, 100};

    /** Precision in test checks. */
    private static final double PRECISION = 1e-2;

    /** Number of partitions. */
    @Parameterized.Parameter
    public int parts;

    /** Parameters. */
    @Parameterized.Parameters(name = "Data divided on {0} partitions, training with batch size {1}")
    public static Iterable<Integer[]> data() {
        List<Integer[]> res = new ArrayList<>();

        for (int part : partsToBeTested)
            res.add(new Integer[]{part});

        return res;
    }

    /** */
    @Test
    public void testBinaryClassification() {
        Map<Integer, double[]> cacheMock = new HashMap<>();

        for (int i = 0; i < data.length; i++)
            cacheMock.put(i, data[i]);

        ANNClassificationTrainer trainer = new ANNClassificationTrainer()
            .withK(10)
            .withMaxIterations(10)
            .withEpsilon(1e-4)
            .withDistance(new EuclideanDistance())
            .withSeed(1234L);

        Assert.assertEquals(10, trainer.getK());
        Assert.assertEquals(10, trainer.getMaxIterations());
        TestUtils.assertEquals(1e-4, trainer.getEpsilon(), PRECISION);
        Assert.assertEquals(new EuclideanDistance(), trainer.getDistance());
        Assert.assertEquals(0, trainer.getSeed());

        NNClassificationModel mdl = trainer.fit(
            cacheMock,
            parts,
            (k, v) -> VectorUtils.of(Arrays.copyOfRange(v, 1, v.length)),
            (k, v) -> v[0]
        ).withK(3)
            .withDistanceMeasure(new EuclideanDistance())
            .withStrategy(NNStrategy.SIMPLE);

        TestUtils.assertEquals(0, mdl.apply(VectorUtils.of(550, 550)), PRECISION);
        TestUtils.assertEquals(1, mdl.apply(VectorUtils.of(-550, -550)), PRECISION);

        Assert.assertNotNull(((ANNClassificationModel) mdl).getCandidates());

        Assert.assertTrue(mdl.toString().contains(NNStrategy.SIMPLE.name()));
        Assert.assertTrue(mdl.toString(true).contains(NNStrategy.SIMPLE.name()));
        Assert.assertTrue(mdl.toString(false).contains(NNStrategy.SIMPLE.name()));
    }

    /** Two-easy clustered data. */
    private static final double[][] data = {
        {0, 519.9017766224466, 554.4100892224841},
        {0, 563.5609233456146, 558.5857619285702},
        {0, 503.5549215892729, 594.3825404658926},
        {0, 584.7460223841858, 515.2243614011547},
        {0, 575.095839624477, 590.8556618187845},
        {0, 594.3592060102463, 554.2221434279162},
        {0, 583.432820535236, 504.66164764881523},
        {0, 599.0963460154512, 534.1774623344388},
        {0, 568.9703081604248, 543.2226391011388},
        {0, 586.6698629586531, 529.5241964168969},
        {0, 551.1051323168858, 539.1885401513679},
        {0, 508.4609024546371, 504.35073029226396},
        {0, 599.0470661333914, 569.4595846036917},
        {0, 570.5493551454197, 526.7253349784085},
        {0, 534.2832458435303, 550.3000463382016},
        {0, 594.4616179647461, 536.3197487506842},
        {0, 565.3197172280577, 506.3293991999001},
        {0, 592.6602122456759, 513.646808538896},
        {0, 509.8216048850749, 509.4973240875119},
        {0, 502.3878128815718, 570.9482197992043},
        {0, 594.6632085763065, 547.9275009326266},
        {0, 529.6467177083762, 547.9107158851994},
        {0, 544.9626346641528, 567.3832919235468},
        {0, 511.4105135690089, 578.1849565872583},
        {0, 501.01584549257973, 570.6868576016038},
        {0, 595.8080144542582, 512.03499265368},
        {0, 528.786843178995, 502.8166496868458},
        {0, 528.6621082789842, 560.8712577770658},
        {0, 510.8974224808237, 596.4667253000505},
        {0, 583.8947380467763, 547.9688139648637},
        {0, 561.4766784411281, 531.2449896695659},
        {0, 560.6943663394893, 566.9710095676068},
        {0, 517.393777179133, 588.7651419118193},
        {0, 500.4713974957799, 528.0769354138976},
        {0, 545.8783916658755, 586.1791106273984},
        {0, 587.1987551324714, 552.7968581692342},
        {0, 504.14955324617733, 502.9202365190475},
        {0, 589.118356537786, 567.5453447798067},
        {0, 581.0404600079042, 524.3383641814191},
        {0, 578.836850556919, 519.0303628080188},
        {0, 532.684541905037, 592.0373074571884},
        {0, 539.631541540315, 500.86701934899133},
        {0, 585.080559785121, 559.185605736917},
        {0, 557.6130747490417, 586.9060188494332},
        {0, 511.4069711786483, 505.20182772247955},
        {0, 543.3420695017039, 589.0522243776551},
        {0, 545.7836567392021, 545.9829264066165},
        {0, 587.4404520697882, 566.2450515524025},
        {0, 598.0352806197182, 592.9871556855218},
        {0, 599.1191676869415, 517.072913155282},
        {0, 598.7990121325806, 542.5922389368699},
        {0, 567.9157541778169, 508.8637304888606},
        {0, 516.9141893487038, 504.5333015373364},
        {0, 528.2650000284832, 592.3618290091457},
        {0, 577.0877824827497, 572.106440915086},
        {0, 569.5034479656674, 513.1883531774486},
        {0, 587.7126777761002, 568.9323649263932},
        {0, 565.9489368582279, 516.9745616328178},
        {0, 557.5589060305804, 515.2687667913198},
        {0, 503.1554198985989, 509.09477188561954},
        {0, 550.0203572858189, 595.1223421437577},
        {0, 524.7913631016987, 523.3640528148924},
        {0, 552.7246513026029, 546.2810129784725},
        {0, 586.3892191983499, 552.7576239548819},
        {0, 526.0748315118926, 573.804342015302},
        {0, 565.1398123093003, 539.6854465576956},
        {0, 527.0537447563926, 595.2059572407275},
        {0, 598.4431244531863, 518.7675712573573},
        {0, 518.1347648644486, 571.2772685572616},
        {0, 522.0665003535328, 597.4691949058798},
        {0, 559.3717433904218, 507.63523020707987},
        {0, 517.7519710704423, 595.9228343205995},
        {0, 557.1028047052068, 513.67799332853},
        {0, 527.9783249961056, 596.5923404246605},
        {0, 508.9548667053109, 583.3851484560171},
        {0, 597.3054599709918, 572.0492942719156},
        {0, 506.48170301986886, 545.2749213691201},
        {0, 569.5215580939445, 552.2362437646713},
        {0, 530.5232047696994, 517.814585379635},
        {0, 582.7447646378554, 554.0837636670908},
        {0, 510.04656659835496, 548.308864572033},
        {0, 517.0884034675382, 503.6293035255885},
        {0, 547.4077952612713, 521.8105170207767},
        {0, 525.2452470246204, 565.7690087891091},
        {0, 525.726872006642, 592.172865284197},
        {0, 598.311246268818, 506.29428096115674},
        {0, 599.4974643204109, 579.8062124124598},
        {0, 584.7506624741848, 592.2505541944379},
        {0, 598.7379007956142, 561.8346831647877},
        {0, 553.9325403298083, 540.4895037718127},
        {0, 577.4868596401562, 533.9482256583582},
        {0, 524.7729276101758, 523.3563039535018},
        {0, 513.6033305233657, 572.2592770048955},
        {0, 574.5120210087475, 557.5521505158835},
        {0, 573.951281294893, 527.3670057739082},
        {0, 548.1326423460839, 551.1839666791825},
        {0, 508.2214563147455, 521.2342805765958},
        {0, 515.93448815859, 511.17271820377954},
        {0, 586.8712784936447, 571.3833808148395},
        {0, 557.5242762492126, 527.4051948485309},
        {1, -527.9820655500421, -597.0614987497938},
        {1, -594.7423576008234, -570.0387215442279},
        {1, -545.604557338824, -554.0763169557739},
        {1, -502.35172702595014, -586.8484342087179},
        {1, -587.293337705269, -588.0796352216714},
        {1, -587.0516505340747, -517.7300179102016},
        {1, -597.0360062250987, -547.9934802704281},
        {1, -540.578489505472, -519.8075273206096},
        {1, -530.4922286462058, -523.234050745461},
        {1, -570.1324748254381, -584.3427934817109},
        {1, -508.71765087148526, -521.2260165247377},
        {1, -506.10153233039114, -546.0469706912013},
        {1, -587.6311232069863, -500.8789962962048},
        {1, -585.9407497123008, -593.6250426349442},
        {1, -597.7192354774427, -504.3968636076061},
        {1, -587.6912279656732, -587.810549281485},
        {1, -567.4906024676383, -529.7889328775241},
        {1, -510.5883782383144, -564.6056218025714},
        {1, -545.5877634339324, -503.13342363625316},
        {1, -595.491952236763, -526.4157102337199},
        {1, -565.8931103880244, -512.3930396698607},
        {1, -564.9817304867518, -518.5421568025347},
        {1, -528.5838433236987, -590.2716385768655},
        {1, -568.3038165320794, -523.2037657971182},
        {1, -513.579781599134, -540.7083264768794},
        {1, -577.5234177434545, -574.4083212880694},
        {1, -566.4331360533965, -529.8498325039095},
        {1, -517.1862636590681, -544.9513758919965},
        {1, -534.6578726508548, -515.7113551681354},
        {1, -531.5918919225953, -508.0051177928042},
        {1, -521.335920134657, -549.8508399779365},
        {1, -587.6565547672371, -500.40617781899505},
        {1, -502.89297655657947, -550.0462820641452},
        {1, -565.9529549834383, -570.5296426883887},
        {1, -539.695184660248, -566.3720803092855},
        {1, -557.2412994794262, -516.6673702747074},
        {1, -548.3193140374153, -511.0113251963232},
        {1, -599.1568790407902, -559.2622714664305},
        {1, -571.755520275542, -554.0839358749181},
        {1, -544.964945135059, -564.448243523719},
        {1, -574.7985361688525, -593.6384131471896},
        {1, -563.642288502551, -538.3721218790038},
        {1, -500.4279098845297, -583.9340798923859},
        {1, -569.917708080877, -550.7162526230916},
        {1, -549.8345448125123, -565.7759787232027},
        {1, -527.8248193430064, -562.9256751876678},
        {1, -508.69265110570973, -544.8174395269017},
        {1, -561.7662650395065, -534.6799220439667},
        {1, -510.11351976460816, -567.17615864117},
        {1, -592.6464340868883, -546.7679954740394},
        {1, -591.5566687475105, -516.335391669214},
        {1, -598.1620280980214, -563.5663494736577},
        {1, -571.6540085024682, -514.5024112396218},
        {1, -597.0973739353884, -518.6402453320493},
        {1, -597.971879649216, -541.9911785849602},
        {1, -502.7804400334985, -527.9041465965335},
        {1, -502.24013032418287, -596.8646708140396},
        {1, -598.4180305891012, -535.013864017069},
        {1, -575.018281589379, -596.0252991207353},
        {1, -593.1939727679464, -557.8288153478848},
        {1, -552.9384213856413, -579.3694486320592},
        {1, -559.9203621818546, -554.0072497905501},
        {1, -588.3411365623961, -575.9606196770269},
        {1, -517.0844394937534, -547.9291196136605},
        {1, -509.32764537741576, -591.737729755405},
        {1, -557.2674260753181, -543.5864572972603},
        {1, -565.1475139126333, -559.4796022645727},
        {1, -556.0025119789701, -572.6261174533101},
        {1, -590.7960121205607, -517.0840963139137},
        {1, -580.3696729031607, -541.5331163469414},
        {1, -519.8369954073894, -599.1883519701099},
        {1, -590.5570159829517, -587.4602437344656},
        {1, -502.5275914906194, -540.3454217852702},
        {1, -584.1282872304774, -593.2194019651928},
        {1, -557.8446121942737, -558.0626917521755},
        {1, -580.209165096907, -588.7259851212183},
        {1, -510.90874302504056, -591.5091481352281},
        {1, -514.1724729381817, -595.1020401318071},
        {1, -552.5076612804402, -548.397966879673},
        {1, -565.2070083573942, -536.1826380211752},
        {1, -565.9469212749985, -561.5506672108052},
        {1, -526.4398083538586, -507.1913169678737},
        {1, -595.2594496218172, -594.98464576562},
        {1, -530.6904491548875, -519.0678635750138},
        {1, -547.9945700155467, -597.6557660417575},
        {1, -554.9468747569997, -591.1678311453294},
        {1, -593.9678599910096, -518.9397714406934},
        {1, -580.6827396967085, -541.1770564720399},
        {1, -526.2991394747967, -595.5353558464069},
        {1, -532.0567052472832, -547.7555982808492},
        {1, -506.550640897891, -501.44148884553215},
        {1, -537.7945174903881, -539.9517392521116},
        {1, -588.1139279080066, -572.5589261656883},
        {1, -598.4030676856231, -528.8036722121387},
        {1, -532.6970859002654, -567.13898500018},
        {1, -564.8245220213231, -595.6981311004888},
        {1, -568.8669962693484, -516.5125158739406},
        {1, -549.1709908638323, -558.8129291840139},
        {1, -510.85336064345756, -575.3635308154353},
        {1, -583.9245510800588, -536.793806117792}
    };
}
